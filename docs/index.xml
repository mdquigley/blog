<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mike Quigley</title>
    <link>https://quig.info/blog/</link>
    <description>Recent content on Mike Quigley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 28 Jul 2021 19:02:29 -0400</lastBuildDate><atom:link href="https://quig.info/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying a Game With Webpack and Github Pages</title>
      <link>https://quig.info/blog/posts/deploying-a-game-with-webpack-and-github-pages/</link>
      <pubDate>Wed, 28 Jul 2021 19:02:29 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/deploying-a-game-with-webpack-and-github-pages/</guid>
      <description>Goal In this post, we&amp;rsquo;re going to look at deploying a Phaser game with Webpack and GitHub Pages. You&amp;rsquo;ll need a game already made, even if it&amp;rsquo;s super bare bones. Phaser has decent tutorials. I&amp;rsquo;d also recommend the Phaser 3 Project Template.
Setup I recently worked up a simple browser-based JavaScript game using the Phaser 3 and Tone.js frameworks. I called it &amp;ldquo;Get To The Gig&amp;rdquo; and wrote about it here.</description>
    </item>
    
    <item>
      <title>Get To The Gig</title>
      <link>https://quig.info/blog/posts/get-to-the-gig/</link>
      <pubDate>Wed, 28 Jul 2021 16:04:49 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/get-to-the-gig/</guid>
      <description>Get To The Gig is a simple browser based game written in JavaScript, built with the Phaser 3 and Tone.js frameworks.
Check out the work-in-progress demo
Source code on GitHub
About I wanted to build a game that utilized music in an interactive way, and in which the music itself was composed via code as oppposed to only playing back audio files. I thought of a quest style game in which the player picks up instruments and a corresponding musical layer is added to the soundtrack.</description>
    </item>
    
    <item>
      <title>Toneblocks Pt1</title>
      <link>https://quig.info/blog/posts/toneblocks-pt1/</link>
      <pubDate>Mon, 28 Jun 2021 12:43:36 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/toneblocks-pt1/</guid>
      <description>Overview Toneblocks is a web-based musical creative coding environment, built with Tone.js and Blockly. Originally developed as my thesis project for the Master of Music in Music Technology requirements at NYU Steinhardt. It is the basis for a paper/poster/video presentated at NIME 2021 titled Toneblocks: block-based musical programming, co-authored with Willie Payne. Watch a brief video demonstration on Youtube, or play around with it on my site.
This is Part 1 of several posts taking a closer look at the application and its underlying mechanics.</description>
    </item>
    
    <item>
      <title>Bandname with JQuery &amp; CORS Anywhere</title>
      <link>https://quig.info/blog/posts/bandname/</link>
      <pubDate>Thu, 24 Jun 2021 14:47:52 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/bandname/</guid>
      <description>Overview Bandname is a very simple site that checks if a Bandcamp subdomain is available. It&amp;rsquo;s built using jQuery and a CORS Anywhere proxy running on Heroku.
Check it out here: https://quig.info/bandname
Source code is available on GitHub
I have a few musical projects that use Bandcamp to stream and sell music and merch. And while it&amp;rsquo;s not too difficult to whip up a new email and walk through the Bandcamp Signup page to see if a specific subdomain is available, it&amp;rsquo;s perhaps just a few more steps than is necessary.</description>
    </item>
    
    <item>
      <title>Mirror Music</title>
      <link>https://quig.info/blog/posts/mirror-music/</link>
      <pubDate>Wed, 23 Jun 2021 20:15:04 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/mirror-music/</guid>
      <description>Mirror Music is an interactive synthesizer that generates random pitches within a user specified key, triggered by motion, and characterized in range and timbre by color.
Video input is split into a grid of 16 squares, or &amp;ldquo;pixels&amp;rdquo;. Each pixel is analyzed for motion and color data. When motion in a pixel is detected, the color data at that moment is sent to 1 of 16 poly~ instances that generates a random pitch within the specified key, played for the specified length with attack, decay, sustain, and release.</description>
    </item>
    
    <item>
      <title>Visual Feedback in a Laptop Instrument</title>
      <link>https://quig.info/blog/posts/visual-feedback-in-a-laptop-instrument/</link>
      <pubDate>Tue, 22 Jun 2021 19:53:30 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/visual-feedback-in-a-laptop-instrument/</guid>
      <description>Over time instrumentalists come to understand the distinctions between primary physical actions that produce sound and ancillary actions that aid in expressing musical or emotional information, which can be vital to audience understanding. It is possible that the loss of haptic feedback makes the properties of a musical instrument less understandable to both performer and audience. Perhaps then visual feedback can allow an instrumentalist to better understand the limitations of his or her instrument when no such haptic feedback exists, as is the case with many musical systems that incorporate live video interaction.</description>
    </item>
    
    <item>
      <title>Zone Out</title>
      <link>https://quig.info/blog/posts/zone-out/</link>
      <pubDate>Mon, 21 Jun 2021 18:43:01 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/zone-out/</guid>
      <description>Final project for Java Music Systems with Professor Nick Didkovsky, Zone Out is a Java program that creates generative ambient music for three voices, written with Java Music Specification Language and JSyn. Above is an excerpt recording. It was originally hosted as a Java applet on a personal website. I&amp;rsquo;d like to recreate and expand on this idea with JavaScript using Tone.js as a personal project sometime soon.</description>
    </item>
    
    <item>
      <title>Funch</title>
      <link>https://quig.info/blog/posts/funch/</link>
      <pubDate>Sun, 20 Jun 2021 18:17:22 -0400</pubDate>
      
      <guid>https://quig.info/blog/posts/funch/</guid>
      <description>Funch was my final project for Computer Music Synthesis with Professor Peter McCulloch. It is a max patch capable of processing both live audio and sound files. It consists of four main sections, each dedicated to the predominant max object in that portion of the patch. The user can manipulate various parameters affecting sample and bit rates, ring modulation, delay and resonance. Each unit output can be mixed independently and a recording of the master output can be made.</description>
    </item>
    
    <item>
      <title>Odds and Ends</title>
      <link>https://quig.info/blog/posts/odds-and-ends/</link>
      <pubDate>Tue, 22 Dec 2020 22:30:38 -0500</pubDate>
      
      <guid>https://quig.info/blog/posts/odds-and-ends/</guid>
      <description>This will be an actively updated post to document various tools I use on my laptop and home server.
Taskwarrior Command line todo tracking
To install (ubuntu): sudo apt install task
To install (macos): brew install task
https://taskwarrior.org/
tldr Brief summaries &amp;amp; examples of command line tools
To install (ubuntu): sudo apt install tldr
To install (macos): brew install tldr
https://tldr.sh/
cmus Command line music player
To install (ubuntu): sudo apt install cmus</description>
    </item>
    
    <item>
      <title>Home Server</title>
      <link>https://quig.info/blog/posts/home-server/</link>
      <pubDate>Fri, 18 Dec 2020 17:45:30 -0500</pubDate>
      
      <guid>https://quig.info/blog/posts/home-server/</guid>
      <description>I&amp;rsquo;ve kept a home server in various configurations over the last several years. Back in April, with an abundance of time at home due to the pandemic, I migrated my server from a old Dell tower running Ubuntu Server to a Raspberry Pi 4 that I had bought a while back and let sit on the shelf. That was fun to tool around with Raspbian and set it up for local network backups and media streaming.</description>
    </item>
    
    <item>
      <title>Welcome to Blog</title>
      <link>https://quig.info/blog/posts/welcome-to-blog/</link>
      <pubDate>Sun, 13 Dec 2020 16:03:25 -0500</pubDate>
      
      <guid>https://quig.info/blog/posts/welcome-to-blog/</guid>
      <description>Okay, first real post. Here we go.
Like a whole ton of people, I&amp;rsquo;ve thought about starting to blog several times over the years. I&amp;rsquo;ve journaled in a physical notebook on and off forever, and have pretty consistently kept a bullet journal for a combination of task and habit tracking, capturing ideas, and shortlength journaling. I&amp;rsquo;ve also written privately in longer form digital documents, which I do find helpful. I think having something be publicly available might force me to A) write more concisely and B) write more often(?</description>
    </item>
    
  </channel>
</rss>
